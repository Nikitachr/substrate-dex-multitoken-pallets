
//! Autogenerated weights for `pallet_template`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-30, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `DESKTOP-2045R2E`, CPU: `Intel(R) Core(TM) i5-4670K CPU @ 3.40GHz`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_template
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// pallets/template/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
	fn set_approval() -> Weight;
	fn mint() -> Weight;
	fn mint_batch(l: u64, ) -> Weight;
	fn transfer_to() -> Weight;
	fn transfer_batch_to(l: u64, ) -> Weight;
	fn transfer_from() -> Weight;
	fn transfer_batch_from(l: u64, ) -> Weight;
}

/// Weight functions for `pallet_template`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: TemplateModule Approvals (r:0 w:1)
	fn set_approval() -> Weight {
		(14_500_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: TemplateModule Balances (r:1 w:1)
	fn mint() -> Weight {
		(15_300_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: TemplateModule Balances (r:1 w:1)
	/// The range of component `l` is `[0, 10]`.
	fn mint_batch(l: u64, ) -> Weight {
		(13_221_000 as Weight)
			// Standard Error: 47_000
			.saturating_add((1_495_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: TemplateModule Balances (r:2 w:2)
	fn transfer_to() -> Weight {
		(19_500_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: TemplateModule Balances (r:2 w:2)
	/// The range of component `l` is `[0, 10]`.
	fn transfer_batch_to(l: u64, ) -> Weight {
		(15_015_000 as Weight)
			// Standard Error: 69_000
			.saturating_add((3_414_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: TemplateModule Balances (r:2 w:2)
	// Storage: TemplateModule Approvals (r:1 w:0)
	fn transfer_from() -> Weight {
		(23_500_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: TemplateModule Approvals (r:1 w:0)
	// Storage: TemplateModule Balances (r:2 w:2)
	/// The range of component `l` is `[0, 10]`.
	fn transfer_batch_from(l: u64, ) -> Weight {
		(18_604_000 as Weight)
			// Standard Error: 49_000
			.saturating_add((3_290_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
